blueprint:
  name: Water Leak Notification (iPhone + Email via SMTP)
  description: Sends an iOS Critical Alert and an email via SMTP when a water leak is detected.
  domain: automation
  input:
    water_sensor:
      name: Water Leak Sensor
      description: The leak-detecting binary sensor.
      selector:
        entity:
          domain: binary_sensor
    notify_device:
      name: Notify Device (mobile app)
      description: The iOS device to receive a Critical Alert.
      selector:
        device:
          integration: mobile_app
    email_service:
      name: Email Notify Service
      description: The notify service for sending email (e.g., notify.zoho_smth).
      default: "notify.zoho_smth"
      selector:
        text: {}
    custom_prefix:
      name: Message Prefix (Optional)
      description: Text prefixed to the notification.
      default: "ðŸš¨ Water leak detected!"
      selector:
        text: {}

trigger:
  - platform: state
    entity_id: !input water_sensor
    to: "on"

variables:
  sensor_name: "{{ state_attr(trigger.entity_id, 'friendly_name') or trigger.entity_id }}"
  time_now: "{{ now().strftime('%H:%M:%S') }}"
  prefix: !input custom_prefix
  final_message: "{{ prefix }}\nSensor: {{ sensor_name }}\nTime: {{ time_now }}"

action:
  - parallel:
      - device_id: !input notify_device
        domain: mobile_app
        type: notify
        message: "{{ final_message }}"
        data:
          push:
            sound:
              name: default
              critical: 1
              volume: 1.0
      - service: "{{ email_service }}"
        data:
          title: "ðŸš¨ Water Leak Alert"
          message: "{{ final_message }}"

mode: single
